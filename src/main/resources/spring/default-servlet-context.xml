<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <mvc:annotation-driven  conversion-service="conversionService"/>

    <mvc:interceptors>
	    <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
	        <property name="cacheSeconds" value="0"/>
	        <property name="useExpiresHeader" value="true"/>
	        <property name="useCacheControlHeader" value="true"/>
	        <property name="useCacheControlNoStore" value="true"/>
	    </bean>
	</mvc:interceptors>
		
	<bean id="org.springframework.http.MediaType.TEXT_HTML" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean"/>
	
	<bean id="contentNegotiatingViewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="favorPathExtension" value="true"/>
   		<property name="defaultContentType" ref="org.springframework.http.MediaType.TEXT_HTML"/>
    	<property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="atom" value="application/atom+xml"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                
                <!-- JSP view resolvers have to be last -->
            	<bean id="jspHtmlViewResourceResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					
					<property name="order" value="10" />
					<property name="prefix" value="/WEB-INF/views/html/" />
					<property name="suffix" value=".jsp" />
				</bean>
				
            </list>
        </property>
    </bean>
    
    <!-- Tiles configuration -->
<!-- 	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"> -->
<!-- 		<property name="useMutableTilesContainer" value="true" /> -->
<!-- 		<property name="definitions"> -->
<!-- 			<list> -->
<!-- 				<value>/WEB-INF/tiles-definitions.xml</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
    

	
	
	<bean id="imagesHandler" class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">
		<property name="locations">
			<list>
				<bean id="imagesLocation" class="org.springframework.core.io.FileSystemResource" >
					<constructor-arg index="0" value="${gateway.home}/resources/images/" />
				</bean>
				<value>images/</value>
			</list>
		</property>
	</bean>
	
	<bean id="jsHandler" class="org.springframework.web.servlet.resource.ResourceHttpRequestHandler">
		<property name="locations">
			<list>
				<bean id="jsLocation" class="org.springframework.core.io.FileSystemResource" >
					<constructor-arg index="0" value="${gateway.home}/resources/js/" />
				</bean>
				<value>js/</value>
			</list>
		</property>
	</bean>
	
	
	
	
	
		<!-- Spring handler and controller to map an HTTP request URL directly to a view with a name equal to the URL path.
	     This handler is ordered last to allow the Spring dispatcher to invoke more specific controllers first. -->
	<bean id="jspFilenameMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="1000" />
		<property name="mappings">
			<props>
				<prop key="/**/*">urlFilenameViewController</prop>
			</props>
		</property>
	</bean>
	
	
	<bean id="urlFilenameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />	

	

</beans>
