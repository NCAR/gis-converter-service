<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
 	<import resource="classpath:default-servlet-context.xml" /> 
	<import resource="classpath:infrastructure-context.xml" />
	
	<bean id="outputFilenameFactory" class="ucar.ral.gis.services.OutputFileNameFactory" />
	
	<bean id="propertyConfigurer" class="sgf.spring.extensions.LoggingPropertyPlaceholderConfigurer">
		<constructor-arg index="0">
			<set>
				<value>database.password</value>
			</set>
		</constructor-arg>
		
		<property name="locations">
	      	<list>
	      		<value>file:${application.home}/conf/services.properties</value>
	      	</list>
	      </property>
		
	</bean>	
	
	
	<bean id="string2ProjectionPeriodConverter" class="ucar.ral.gis.services.converters.String2PeriodConverter" />
	<bean id="string2ProjectionSeasonConverter" class="ucar.ral.gis.services.converters.String2ProjectionSeasonConverter" />
	<bean id="string2ProjectionTermConverter" class="ucar.ral.gis.services.converters.String2ProjectionTermConverter" />
	
	<bean id="string2MonthConverter" class="ucar.ral.gis.services.converters.String2MonthConverter" />
	
	<bean id="string2ScaleConverter" class="ucar.ral.gis.services.converters.String2ScaleConverter">
		<constructor-arg>
			<map>
				<entry key="downscaled"> <util:constant static-field="ucar.ral.gis.services.Resolution.DOWNSCALED"/> </entry>
				<entry key="global"> <util:constant static-field="ucar.ral.gis.services.Resolution.GLOBAL"/> </entry>
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="string2TemporalResolutionConverter" class="ucar.ral.gis.services.converters.String2TemporalResolutionConverter">
		<constructor-arg>
			<map>
				<entry key="mome"> <util:constant static-field="ucar.ral.gis.services.TemporalResolution.MONTHLY_MEAN"/> </entry>
				<entry key="anme"> <util:constant static-field="ucar.ral.gis.services.TemporalResolution.ANNUAL_MEAN"/> </entry>
				<entry key="ltav"> <util:constant static-field="ucar.ral.gis.services.TemporalResolution.LONGTERM_AVERAGE"/> </entry>
				<entry key="anom"> <util:constant static-field="ucar.ral.gis.services.TemporalResolution.CLIMATE_ANOMOLY"/> </entry>
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="ensembleMemberConverter" class="ucar.ral.gis.services.converters.EnsembleMemberConverter"/>
	
	<bean id="monthIndexMap" class="org.springframework.beans.factory.config.MapFactoryBean">
	  <property name="sourceMap">
	      <map>
	        <entry key="january" value="1"/>
	        <entry key="february" value="2"/>
	        <entry key="march" value="3"/>
	        <entry key="april" value="4"/>
	        <entry key="may" value="5"/>
	        <entry key="june" value="6"/>
	        <entry key="july" value="7"/>
	        <entry key="august" value="8"/>
	        <entry key="september" value="9"/>
	        <entry key="october" value="10"/>
	        <entry key="november" value="11"/>
	        <entry key="december" value="12"/>
	      </map>
	  </property>
	</bean>
	
	
	
	 <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="string2ScaleConverter" />
                <ref bean="ensembleMemberConverter" />
                <ref bean="string2TemporalResolutionConverter" />
                <ref bean="string2MonthConverter" />
                <ref bean="string2ProjectionSeasonConverter" />
                <ref bean="string2ProjectionTermConverter" />
                <ref bean="string2ProjectionPeriodConverter" />
            </set>
        </property>
        <property name="formatters">
            <set>
            </set>
        </property>
        <property name="formatterRegistrars">
            <set>
            </set>
        </property>
    </bean>
	
	<bean id="dataFileFactory" class="ucar.ral.gis.services.pipeline.conversion.netcdf.sourcefile.DataFileFactory" >
<!-- 		<constructor-arg index="0" value="${data.root.directory}" /> -->
<!-- 		<constructor-arg index="1"> -->
<!-- 			<map> -->
<!-- 				<entry key="20C3M" value="20C3M"/> -->
<!-- 				<entry key="Commit" value="Commit"/> -->
<!-- 				<entry key="SRESA1B" value="SRESA1B"/> -->
<!-- 				<entry key="SRESB1" value="SRESB1"/> -->
<!-- 				<entry key="SRESA2" value="SRESA2"/> -->
<!-- 			</map> -->
<!-- 		</constructor-arg> -->
	</bean>
	
	<bean id="debugInputProcessor" class="ucar.ral.gis.services.pipeline.Pipeline" >
		<constructor-arg index="0">
			<list>
				<ref bean="sourceDatafileProcessor"/>
			</list>
		</constructor-arg>
	
	</bean>
	
	<bean id="conversionProcessor" class="ucar.ral.gis.services.pipeline.Pipeline" >
		<constructor-arg index="0">
			<list>
				<ref bean="sourceDatafileProcessor"/>
				<ref bean="outputFileProcessor"/>
				<ref bean="conversionRouterProcessor"/>
				<ref bean="zipArchiveProcessor"/>
			</list>
		</constructor-arg>
	
	</bean>
	
	<bean id="monthlyMeanFileHandler" class="ucar.ral.gis.services.pipeline.conversion.netcdf.sourcefile.MonthlyMeanFileHandler">
		<constructor-arg index="0" ref="derivedProductFileHandler" />
		<constructor-arg index="1" value="${data.root.directory}" />
		<constructor-arg index="2">
			<map>
				<entry key="20C3M" value="20C3M"/>
				<entry key="Commit" value="Commit"/>
				<entry key="SRESA1B" value="SRESA1B"/>
				<entry key="SRESB1" value="SRESB1"/>
				<entry key="SRESA2" value="SRESA2"/>
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="derivedProductFileHandler" class="ucar.ral.gis.services.pipeline.conversion.netcdf.sourcefile.DerivedProductFileHandler">
		<constructor-arg index="0"><null/></constructor-arg>
		<constructor-arg index="1" value="${data.root.directory}" />
	</bean>
	
	
	<bean id="sourceDatafileProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.sourcefile.SourceDatafileProcessor" >
		<constructor-arg index="0" ref="monthlyMeanFileHandler" />
	</bean>
	
	<bean id="conversionRouterProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.ConversionRouterProcessor" >
		<constructor-arg index="0" ref="shapefileConversionProcessor" />
		<constructor-arg index="1" ref="textfileConversionProcessor" />
	</bean>
	
	<bean id="shapefileConversionProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.ShapefileConversionProcessor" />
	<bean id="textfileConversionProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.TextfileConversionProcessor" />
	
	<bean id="outputFileProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.OutputFileProcessor" >
		<constructor-arg index="0" value="${conversion.work.directory}" />
		<constructor-arg index="1" ref="outputFilenameFactory" />
	</bean>
	
	<bean id="zipArchiveProcessor" class="ucar.ral.gis.services.pipeline.conversion.netcdf.ZipArchiveProcessor" />
	
	<bean id="monthlyMeanController" class="ucar.ral.gis.services.netcdf2shapefile.rest.monthly.MonthlyMeanController" >
		<constructor-arg index="0" ref="outputFilenameFactory" />
		<constructor-arg index="1" ref="conversionProcessor" />
		<constructor-arg index="2" ref="debugInputProcessor" />
	</bean>
	
	<bean id="annualMeanController" class="ucar.ral.gis.services.netcdf2shapefile.rest.annual.AnnualMeanController" >
		<constructor-arg index="0" ref="outputFilenameFactory" />
		<constructor-arg index="1" ref="conversionProcessor" />
		<constructor-arg index="2" ref="debugInputProcessor" />
	</bean>
	
	<bean id="longTermAverageController" class="ucar.ral.gis.services.netcdf2shapefile.rest.longterm.LongTermAverageController" >
		<constructor-arg index="0" ref="outputFilenameFactory" />
		<constructor-arg index="1" ref="conversionProcessor" />
		<constructor-arg index="2" ref="debugInputProcessor" />
	</bean>
	
	<bean id="anomalyController" class="ucar.ral.gis.services.netcdf2shapefile.rest.anomaly.AnomalyController" >
		<constructor-arg index="0" ref="outputFilenameFactory" />
		<constructor-arg index="1" ref="conversionProcessor" />
		<constructor-arg index="2" ref="debugInputProcessor" />
	</bean>
	
</beans>